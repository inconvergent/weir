(in-package #:weir-tests)

(defun %test-rnd ()
  (do-test (length (rnd:rndspace 10 0d0 10d0)) 10)

  (do-test
    (rnd:rndspace 10 0d0 10d0) '(8.383887417540674d0 3.704390759927394d0
                                 4.089044985321939d0 7.5623438794824605d0
                                 0.5477479401961061d0 3.409356250400757d0
                                 8.3460946770173d0 1.1737959928376207d0
                                 2.8077405846385473d0 3.962028297321658d0))

  (do-test
    (rnd:rndspace 10 0d0 10d0 :order t)
     '(0.7810904793737161d0 1.700886055024764d0 3.396607010299655d0
       3.8464500251059364d0 6.014897498803242d0 6.268483093269445d0
       7.527788782312825d0 7.562853532104885d0 7.892139712781054d0
       9.365232493948968d0))

  (do-test (rnd:rndspacei 10 0 10) '(7 3 6 5 1 9 3 4 8 1))

  (do-test (rnd:rndspacei 10 0 10 :order t) '(0 0 2 2 3 4 4 7 9 9))

  (do-test (length (rnd:nrndi 9 4)) 9)

  (do-test (length (rnd:nrnd 11 4d0)) 11)

  (do-test (length (rnd:nrnd 12 4d0)) 12)

  (do-test (length (rnd:nrnd* 12 4d0)) 12)

  (do-test (rnd:bernoulli 4 0.5d0) '(0.0d0 0.0d0 0.0d0 0.0d0))

  (do-test
    (let ((a (list)))
      (rnd:with-rndspace (10 0d0 7d0 v)
        (setf a (append a (list v))))
      a)
   '(6.507759172138558d0 2.2881798617968423d0 1.7037377515259524d0
     1.6064438902476477d0 6.2928480610573665d0 6.298771369144957d0
     1.097454636438975d0 5.713911684630423d0 3.318378773155661d0
     5.647317315258949d0))

  (do-test
    (let ((a (list)))
      (rnd:with-on-line (10 (vec:vec 1d0 1d0) (vec:vec 4d0 3d0) v)
        (setf a (append a (list v))))
      a)
   (list (vec:vec 1.4420775452437415d0 1.2947183634958277d0)
         (vec:vec 1.0172227079557705d0 1.011481805303847d0)
         (vec:vec 1.702867945470302d0 1.4685786303135346d0)
         (vec:vec 2.9598710402505835d0 2.306580693500389d0)
         (vec:vec 1.1623459120025506d0 1.1082306080017004d0)
         (vec:vec 3.3156539222026513d0 2.543769281468434d0)
         (vec:vec 3.143617069170394d0 2.429078046113596d0)
         (vec:vec 3.4512122094895474d0 2.6341414729930315d0)
         (vec:vec 1.7401594182758866d0 1.4934396121839244d0)
         (vec:vec 1.0949266500503054d0 1.0632844333668703d0)))

  (do-test
    (let ((a (list)))
      (rnd:with-in-circ (10 4d0 v)
        (setf a (append a (list v))))
      a)
    (list (vec:vec -3.2289266618005463d0 1.173326893900633d0)
          (vec:vec -2.267965042218162d0 3.268859019509251d0)
          (vec:vec -1.4143813501406504d0 3.1585446412766736d0)
          (vec:vec -0.8043636451397664d0 1.3535842643178702d0)
          (vec:vec 2.0421463502216497d0 -0.07975392718826195d0)
          (vec:vec -3.384193548911458d0 -6.350251329993679d-4)
          (vec:vec 0.5328441305158991d0 0.8393134784537689d0)
          (vec:vec 0.20238689972914906d0 -0.101591706130127d0)
          (vec:vec -1.162668476292421d0 -2.635125988346128d0)
          (vec:vec -0.039436399757947375d0 -0.42073258274167163d0)))

  (do-test
    (rnd:on-line (vec:vec 101d0 204d0) (vec:vec 433d0 454d0))
    (vec:vec 328.1083568590696d0 375.01532896014277d0))

  (do-test
    (rnd:on-circ 303d0 :xy (vec:vec 303d0 73d0))
    (vec:vec 306.14778707543655d0 375.98364879400293d0))

  (do-test
    (rnd:in-circ 303d0 :xy (vec:vec 303d0 73d0))
    (vec:vec 243.51609955461907d0 231.38334433095946d0))

  (do-test
    (rnd:non-line 5 (vec:vec 101d0 204d0) (vec:vec 433d0 454d0))
    (list (vec:vec 412.8114993587596d0 438.7978157821985d0)
          (vec:vec 141.5239773978766d0 234.51504322129261d0)
          (vec:vec 113.3819941657358d0 213.32379078745166d0)
          (vec:vec 300.62005634338436d0 354.3163074874882d0)
          (vec:vec 255.69499795342622d0 320.487197254086d0)))

  (do-test
    (rnd:nin-circ 5 20d0 :xy (vec:vec 433d0 454d0))
    (list (vec:vec 437.0273521546584d0 439.0174212934645d0)
          (vec:vec 426.7886779194167d0 440.85162023013874d0)
          (vec:vec 428.35235989996613d0 456.86207789540106d0)
          (vec:vec 428.149958120093d0 454.189520107701d0)
          (vec:vec 429.3064265983025d0 456.20125820264457d0)))

  (do-test (rnd:nrnd* 10 2d0)
           (list 0.19432595699713584d0 0.2960890350363323d0
                 1.5222638918923508d0 1.899554711267041d0 1.4242046571370244d0
                 -1.7382101471510119d0 1.4551953329271194d0
                 0.3736569443931659d0 -0.01860485892165098d0
                 0.04939589836681524d0)))


(define-file-tests test-rnd ()
  (test-title (%test-rnd))
  (test-title (test-summary)))
